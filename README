Dummy native binder android HelloWorld sample created to better understand the
possibilities of creating pure native android services. The current status
is that it certainly is possible to create native binder services under android and We wonder why not all communication inside android is implemented this way.

Problems:
-It works but only for platform code. 
--It is not possible/easy to access the service using the standard Context.bindService method probably because starting the native code is not started or managed by the ActivityManager(We are lacking proper life cycle management)

This code was taken from http://github.com/mcr/Android-HelloWorldService and
modified to work on ginderbread. 

Building/playing around:

See https://github.com/keesj/gomo/wiki/AndroidPlatformDevelopmentWorkflow

Checkout this this branch into your android platform tree
. build/envsetup.sh
lunch sdk-eng
make


After that 
and goto the Android-HelloWorldService directory
use mm/adb sync to build deploy

Running:

From the shell:
# /system/bin/helloworldservice
hello: fun
hello: Using interfaces
hello: Calling from Java now

# /system/bin/helloworldclient

To launch the Activity use the activity launcher.


Native binder:
/* Interfaces extend */
class IInterface extends RefBase
    + asBinder()
    + onAsBinder();

/* The native class implementation extends BnInterface
 * this is the instance that will be given to the service
 * manager
 *
 * BnInterface is the base implementation for a native (local) IInterface
 **/
class BnInterface<INTERFACE> extends BBinder
    + queryLocalInterface(descriptor)

/**
 * The BBinder class is the standard implementation of IBinder for a IInterface object
 **/
class BBinder extends IBinder
    + getInterfaceDescriptor()
    + attachObject(id ...) /* housekeeping of clients? */
    + findObject(id ...)
    + detachObject(id ...);

/* remote stub implemntation extends */
class BpInterface<INTERFACE> extends BpRefBase
    + onAsBinder();



/* BpRefBase defines a ref counted class having a method to get
 * a binder object
 */
class BpRefBase extends RefBase
    + remote() IBinder*